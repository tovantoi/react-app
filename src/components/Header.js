import React, { useState, useEffect } from "react";
import { Link, useNavigate } from "react-router-dom";

const Header = ({ cart }) => {
  const navigate = useNavigate();
  const [searchQuery, setSearchQuery] = useState("");
  const [error, setError] = useState("");
  const [user, setUser] = useState(null); // Th√™m state ƒë·ªÉ l∆∞u th√¥ng tin ng∆∞·ªùi d√πng

  // Ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p khi component ƒë∆∞·ª£c mount
  useEffect(() => {
    const storedUser = JSON.parse(localStorage.getItem("user"));
    if (storedUser) {
      setUser(storedUser); // N·∫øu c√≥ th√¥ng tin ng∆∞·ªùi d√πng, l∆∞u v√†o state
    }
  }, []);

  const handleSearch = async () => {
    if (!searchQuery.trim()) {
      setError("Vui l√≤ng nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm!");
      return;
    }

    try {
      const response = await fetch(
        `https://localhost:7022/minimal/api/get-name-product?productname=${encodeURIComponent(
          searchQuery
        )}`
      );

      if (!response.ok) {
        if (response.status === 404) {
          setError("Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o ph√π h·ª£p.");
        } else {
          throw new Error("ƒê√£ x·∫£y ra l·ªói khi t√¨m ki·∫øm. Vui l√≤ng th·ª≠ l·∫°i.");
        }
        return;
      }

      const data = await response.json();
      setError("");
      navigate("/search-results", {
        state: { results: data, query: searchQuery },
      });
    } catch (error) {
      setError(
        error.message || "ƒê√£ x·∫£y ra l·ªói kh√¥ng x√°c ƒë·ªãnh. Vui l√≤ng th·ª≠ l·∫°i."
      );
    }
  };

  const handleKeyPress = (e) => {
    if (e.key === "Enter") {
      handleSearch();
    }
  };

  const handleLogout = () => {
    localStorage.removeItem("user");
    setUser(null); // C·∫≠p nh·∫≠t l·∫°i tr·∫°ng th√°i ng∆∞·ªùi d√πng
    alert("ƒêƒÉng xu·∫•t th√†nh c√¥ng!");
    navigate("/login");
  };

  return (
    <header className="bg-white shadow-sm">
      <div className="container d-flex justify-content-between align-items-center py-3">
        <div className="logo animated-logo">
          <img
            src="/assets/logoo.png"
            alt="Logo"
            className="me-2"
            style={{ height: "70px" }}
          />
          <Link to="/" className="text-decoration-none fs-3">
            <span className="logo-text">
              SHOP <b>VANTOI</b>
            </span>
          </Link>
        </div>

        <nav>
          <ul className="nav">
            <li className="nav-item">
              <a href="/products" className="nav-link text-dark">
                <b> H√†ng m·ªõi</b>
              </a>
            </li>
            <li className="nav-item">
              <a href="/products" className="nav-link text-dark">
                <b>S·∫£n ph·∫©m</b>
              </a>
            </li>
            <li className="nav-item">
              <a href="#phukien" className="nav-link text-dark">
                <b>Ph·ª• ki·ªán</b>
              </a>
            </li>
            <li className="nav-item">
              <a href="/contact" className="nav-link text-dark">
                <b>Li√™n h·ªá</b>
              </a>
            </li>
          </ul>
        </nav>

        <div className="d-flex align-items-center">
          <input
            type="text"
            className={`form-control me-2 ${error ? "is-invalid" : ""}`}
            placeholder="B·∫°n t√¨m g√¨?"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            onKeyPress={handleKeyPress}
          />
          <button className="btn btn-dark" onClick={handleSearch}>
            üîç
          </button>
          {error && <div className="invalid-feedback">{error}</div>}

          <div className="account-dropdown position-relative ms-3">
            <button className="btn btn-light">
              <span role="img" aria-label="account">
                üë§
              </span>
            </button>
            <ul
              className="dropdown-menu position-absolute bg-white shadow"
              style={{ right: 0, top: "100%", zIndex: 1000 }}
            >
              {user ? (
                <>
                  <li>
                    <Link to="/my-account" className="dropdown-item">
                      T√†i kho·∫£n c·ªßa t√¥i
                    </Link>
                  </li>
                  <li>
                    <button
                      onClick={handleLogout}
                      className="dropdown-item btn btn-link text-start"
                    >
                      ƒêƒÉng xu·∫•t
                    </button>
                  </li>
                </>
              ) : (
                <>
                  <li>
                    <Link to="/login" className="dropdown-item">
                      ƒêƒÉng nh·∫≠p
                    </Link>
                  </li>
                  <li>
                    <Link to="/register" className="dropdown-item">
                      T·∫°o t√†i kho·∫£n
                    </Link>
                  </li>
                </>
              )}
            </ul>
          </div>

          <div>
            <Link to="/cart" className="btn btn-primary position-relative ms-3">
              üõí Gi·ªè h√†ng
              <span className="badge bg-danger position-absolute top-0 start-100 translate-middle">
                {cart.reduce((total, item) => total + (item.quantity || 1), 0)}
              </span>
            </Link>
          </div>
        </div>
      </div>
    </header>
  );
};

export default Header;
